apiVersion: v1
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: grpc_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 8081 }
          filter_chains:
            - filters:
                - name: envoy.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% ms\n"
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/Greeter/SayHello" }
                              route: { cluster: hello_service }
                    http_filters:
                      - name: envoy.grpc_web
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        - name: http_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8080
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% ms\n"
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: backend
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/" }
                              route:
                                cluster: flask_app_cluster
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: flask_app_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: flask_app_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: flask
                          port_value: 5000
          health_checks:
            - timeout: 1s
              interval: 10s
              unhealthy_threshold: 3
              healthy_threshold: 2
              http_health_check:
                path: /health
                # expected_statuses:
                #   - start: 200
                #     end: 200
        - name: hello_service
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: grpc_app_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: grpc
                          port_value: 50051
    overload_manager:
      refresh_interval:
        seconds: 0
        nanos: 250000000
      resource_monitors:
        - name: envoy.resource_monitors.fixed_heap
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
            max_heap_size_bytes: 1073741824
        - name: envoy.resource_monitors.global_downstream_max_connections
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
            max_active_downstream_connections: 16
      actions:
        - name: "envoy.overload_actions.disable_http_keepalive"
          triggers:
            - name: "envoy.resource_monitors.fixed_heap"
              threshold:
                value: 0.92
        - name: "envoy.overload_actions.stop_accepting_requests"
          triggers:
            - name: "envoy.resource_monitors.fixed_heap"
              threshold:
                value: 0.95
      loadshed_points:
        - name: "envoy.load_shed_points.tcp_listener_accept"
          triggers:
            - name: "envoy.resource_monitors.fixed_heap"
              threshold:
                value: 0.95
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: envoy
  name: envoy-cm0
